{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\personalia\\\\src\\\\Components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport { Container } from 'reactstrap';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      dataPersonalia: [],\n      error: null\n    };\n\n    this.searchName = inputValue => {\n      return this.state.dataPersonalia.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()));\n    };\n\n    this.promiseOptions = inputValue => new Promise(resolve => {\n      setTimeout(() => {\n        resolve(this.searchName(inputValue));\n      }, 50);\n    });\n  }\n\n  //Memasukan data dari random user\n  componentDidMount() {\n    const getUserUrl = \"https://randomuser.me/api/?results=50\"; //data yg dimasukan sebanyak 50(result=50)\n\n    fetch(getUserUrl).then(response => response.json()).then(response => this.setState({\n      dataPersonalia: response.results.map(data => ({\n        label: `${data.name.first} ${data.name.last}`,\n        value: `${data.name.first} ${data.name.last}`,\n        photo: data.picture.thumbnail\n      }))\n    }));\n  } //Search nama personalia\n\n\n  render() {\n    const dataPersonalia = this.state.dataPersonalia;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(AsyncSelect, {\n      menuIsOpen: true //menampilkan data personalia\n      ,\n      closeMenuOnSelect: false //memasukan pencarian\n      ,\n      defaultOptions: dataPersonalia,\n      loadOptions: this.promiseOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/xampp/htdocs/personalia/src/Components/Home.js"],"names":["React","Component","AsyncSelect","Container","Home","state","isLoading","dataPersonalia","error","searchName","inputValue","filter","i","label","toLowerCase","includes","promiseOptions","Promise","resolve","setTimeout","componentDidMount","getUserUrl","fetch","then","response","json","setState","results","map","data","name","first","last","value","photo","picture","thumbnail","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,KADyB,GACjB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,cAAc,EAAE,EAFZ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADiB;;AAAA,SA0BrBC,UA1BqB,GA0BPC,UAAD,IAAc;AACvB,aAAO,KAAKL,KAAL,CAAWE,cAAX,CAA0BI,MAA1B,CACHC,CAAC,IAAEA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BL,UAAU,CAACI,WAAX,EAA/B,CADA,CAAP;AAGH,KA9BoB;;AAAA,SAiCrBE,cAjCqB,GAiCHN,UAAD,IAAc,IAAIO,OAAJ,CAAYC,OAAO,IAAI;AAC9CC,MAAAA,UAAU,CAAC,MAAM;AACbD,QAAAA,OAAO,CAAC,KAAKT,UAAL,CAAgBC,UAAhB,CAAD,CAAP;AACH,OAFS,EAEP,EAFO,CAAV;AAGH,KAJ0B,CAjCV;AAAA;;AAOrB;AACAU,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,uCAAnB,CADgB,CAC4C;;AAE5DC,IAAAA,KAAK,CAACD,UAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAChCnB,MAAAA,cAAc,EAAGiB,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CACbC,IAAI,KAAK;AACLhB,QAAAA,KAAK,EAAG,GAAEgB,IAAI,CAACC,IAAL,CAAUC,KAAM,IAAGF,IAAI,CAACC,IAAL,CAAUE,IAAK,EADvC;AAELC,QAAAA,KAAK,EAAG,GAAEJ,IAAI,CAACC,IAAL,CAAUC,KAAM,IAAGF,IAAI,CAACC,IAAL,CAAUE,IAAK,EAFvC;AAGLE,QAAAA,KAAK,EAAEL,IAAI,CAACM,OAAL,CAAaC;AAHf,OAAL,CADS;AADe,KAAd,CAFtB;AAYH,GAvBoB,CAyBrB;;;AAcAC,EAAAA,MAAM,GAAG;AAAA,UACE9B,cADF,GACoB,KAAKF,KADzB,CACEE,cADF;AAEL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AACI,MAAA,UAAU,EAAE,IADhB,CACsB;AADtB;AAEI,MAAA,iBAAiB,EAAE,KAFvB,CAE8B;AAF9B;AAGI,MAAA,cAAc,EAAEA,cAHpB;AAII,MAAA,WAAW,EAAE,KAAKS,cAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAnDoB;;AAuD7B,eAAeZ,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        dataPersonalia: [],\r\n        error: null\r\n    };\r\n\r\n        //Memasukan data dari random user\r\n        componentDidMount() {\r\n            const getUserUrl = \"https://randomuser.me/api/?results=50\"; //data yg dimasukan sebanyak 50(result=50)\r\n            \r\n            fetch(getUserUrl)\r\n                .then(response => response.json())\r\n                .then(response => this.setState({\r\n                dataPersonalia : response.results.map(\r\n                    data => ({\r\n                        label: `${data.name.first} ${data.name.last}`,\r\n                        value: `${data.name.first} ${data.name.last}`,\r\n                        photo: data.picture.thumbnail\r\n                    })\r\n                )\r\n                })\r\n            );\r\n        }\r\n\r\n        //Search nama personalia\r\n        searchName = (inputValue)=>{\r\n            return this.state.dataPersonalia.filter(\r\n                i=>i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n            );\r\n        };\r\n\r\n        //Mengecek inputan\r\n        promiseOptions = (inputValue)=>new Promise(resolve => {\r\n                setTimeout(() => {\r\n                    resolve(this.searchName(inputValue));\r\n                }, 50);\r\n            });\r\n\r\n        render() {\r\n            const {dataPersonalia} = this.state\r\n            return (\r\n                <Container>\r\n                    <AsyncSelect\r\n                        menuIsOpen={true} //menampilkan data personalia\r\n                        closeMenuOnSelect={false} //memasukan pencarian\r\n                        defaultOptions={dataPersonalia}\r\n                        loadOptions={this.promiseOptions}\r\n                    />\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}