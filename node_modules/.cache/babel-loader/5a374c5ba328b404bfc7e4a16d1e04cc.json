{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\personalia\\\\src\\\\Components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport Profile from \"./Layout/Profile\";\nimport FormatOptionLabel from \"./FormatOptionLabel\";\nimport { Container } from 'reactstrap';\nimport { Style } from \"./Style/Style\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userData: []\n    };\n\n    this.filterName = inputValue => {\n      return this.state.userData.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()));\n    };\n\n    this.promiseOptions = inputValue => new Promise(resolve => {\n      setTimeout(() => {\n        resolve(this.filterName(inputValue));\n      }, 500);\n    });\n  }\n\n  // fetch 50 user from randomuser and push it to userData state.\n  componentDidMount() {\n    const getUserUrl = \"https://randomuser.me/api/?results=50\";\n    fetch(getUserUrl).then(response => response.json()).then(response => this.setState({\n      userData: response.results.map(data => ({\n        label: `${data.name.first} ${data.name.last}`,\n        value: `${data.name.first} ${data.name.last}`,\n        photo: data.picture.thumbnail\n      }))\n    }));\n  } // filter user by comparing label and user input\n\n\n  render() {\n    const userData = this.state.userData;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(AsyncSelect, {\n      cacheOptions: true,\n      menuIsOpen: true,\n      closeMenuOnSelect: false,\n      components: {\n        SingleValue: Profile\n      },\n      Style: Style,\n      defaultOptions: userData,\n      placeholder: \"Pilih personalia...\",\n      formatOptionLabel: FormatOptionLabel,\n      loadOptions: this.promiseOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/xampp/htdocs/personalia/src/Components/Home.js"],"names":["React","Component","AsyncSelect","Profile","FormatOptionLabel","Container","Style","Home","state","userData","filterName","inputValue","filter","i","label","toLowerCase","includes","promiseOptions","Promise","resolve","setTimeout","componentDidMount","getUserUrl","fetch","then","response","json","setState","results","map","data","name","first","last","value","photo","picture","thumbnail","render","SingleValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBO,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADiB;;AAAA,SA0BzBC,UA1ByB,GA0BZC,UAAU,IAAI;AACvB,aAAO,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,CAA2BC,CAAC,IAC/BA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BL,UAAU,CAACI,WAAX,EAA/B,CADG,CAAP;AAGH,KA9BwB;;AAAA,SAgCzBE,cAhCyB,GAgCRN,UAAU,IACvB,IAAIO,OAAJ,CAAYC,OAAO,IAAI;AACnBC,MAAAA,UAAU,CAAC,MAAM;AACbD,QAAAA,OAAO,CAAC,KAAKT,UAAL,CAAgBC,UAAhB,CAAD,CAAP;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAJD,CAjCqB;AAAA;;AAKzB;AACAU,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,UAAU,GAAG,uCAAnB;AACAC,IAAAA,KAAK,CAACD,UAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAC5BlB,MAAAA,QAAQ,EACJgB,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CACIC,IAAI,KACA;AACIhB,QAAAA,KAAK,EAAG,GAAEgB,IAAI,CAACC,IAAL,CAAUC,KAAM,IAAGF,IAAI,CAACC,IAAL,CAAUE,IAAK,EADhD;AAEIC,QAAAA,KAAK,EAAG,GAAEJ,IAAI,CAACC,IAAL,CAAUC,KAAM,IAAGF,IAAI,CAACC,IAAL,CAAUE,IAAK,EAFhD;AAGIE,QAAAA,KAAK,EAAEL,IAAI,CAACM,OAAL,CAAaC;AAHxB,OADA,CADR;AAFwB,KAAd,CAFtB;AAeH,GAvBwB,CAyBzB;;;AAcAC,EAAAA,MAAM,GAAG;AAAA,UACG7B,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAEL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AACI,MAAA,YAAY,MADhB;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,iBAAiB,EAAE,KAHvB;AAII,MAAA,UAAU,EAAE;AAAE8B,QAAAA,WAAW,EAAEpC;AAAf,OAJhB;AAKI,MAAA,KAAK,EAAEG,KALX;AAMI,MAAA,cAAc,EAAEG,QANpB;AAOI,MAAA,WAAW,EAAE,qBAPjB;AAQI,MAAA,iBAAiB,EAAEL,iBARvB;AASI,MAAA,WAAW,EAAE,KAAKa,cATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeH;;AAxDwB;;AA4D7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AsyncSelect from \"react-select/async\";\nimport Profile from \"./Layout/Profile\";\nimport FormatOptionLabel from \"./FormatOptionLabel\";\nimport { Container } from 'reactstrap';\nimport { Style } from \"./Style/Style\";\n\nclass Home extends Component {\n    state = {\n        userData: []\n    };\n\n    // fetch 50 user from randomuser and push it to userData state.\n    componentDidMount() {\n        const getUserUrl = \"https://randomuser.me/api/?results=50\";\n        fetch(getUserUrl)\n            .then(response => response.json())\n            .then(response => this.setState({\n                userData:\n                    response.results.map(\n                        data => (\n                            {\n                                label: `${data.name.first} ${data.name.last}`,\n                                value: `${data.name.first} ${data.name.last}`,\n                                photo: data.picture.thumbnail\n                            }\n                        )\n                    )\n            })\n            );\n    }\n\n    // filter user by comparing label and user input\n    filterName = inputValue => {\n        return this.state.userData.filter(i =>\n            i.label.toLowerCase().includes(inputValue.toLowerCase())\n        );\n    };\n    // async action every 0.5 second to check the input value\n    promiseOptions = inputValue =>\n        new Promise(resolve => {\n            setTimeout(() => {\n                resolve(this.filterName(inputValue));\n            }, 500);\n        });\n\n    render() {\n        const { userData } = this.state\n        return (\n            <Container>\n                <AsyncSelect\n                    cacheOptions\n                    menuIsOpen={true}\n                    closeMenuOnSelect={false}\n                    components={{ SingleValue: Profile }}\n                    Style={Style}\n                    defaultOptions={userData}\n                    placeholder={\"Pilih personalia...\"}\n                    formatOptionLabel={FormatOptionLabel}\n                    loadOptions={this.promiseOptions}\n                />\n            </Container>\n        );\n    }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}